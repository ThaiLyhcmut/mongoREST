version: '3.8'

services:
  mongorest:
    build: .
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://mongo:27017/mongorest
      - MONGODB_DB_NAME=mongorest
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PORT=3000
      - HOST=0.0.0.0
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mongorest-network
    volumes:
      - ./schemas:/app/schemas:ro
      - ./config:/app/config:ro
      - ./docs:/app/docs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=mongorest
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - mongorest-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mongorest-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mongorest
    restart: unless-stopped
    networks:
      - mongorest-network

volumes:
  mongo_data:
    driver: local

networks:
  mongorest-network:
    driver: bridge
